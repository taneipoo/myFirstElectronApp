{
  "_args": [
    [
      {
        "raw": "graham_scan@github:mathisonian/graham_scan_js",
        "scope": null,
        "escapedName": "graham_scan",
        "name": "graham_scan",
        "rawSpec": "github:mathisonian/graham_scan_js",
        "spec": "github:mathisonian/graham_scan_js",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:mathisonian/graham_scan_js.git",
          "sshUrl": "git+ssh://git@github.com/mathisonian/graham_scan_js.git",
          "httpsUrl": "git+https://github.com/mathisonian/graham_scan_js.git",
          "gitUrl": "git://github.com/mathisonian/graham_scan_js.git",
          "shortcut": "github:mathisonian/graham_scan_js",
          "directUrl": "https://raw.githubusercontent.com/mathisonian/graham_scan_js/master/package.json"
        }
      },
      "C:\\git-repo\\myFirstElectronApp\\node_modules\\leaflet.freedraw-browserify"
    ]
  ],
  "_from": "mathisonian/graham_scan_js",
  "_id": "graham_scan@1.0.2",
  "_inCache": true,
  "_location": "/graham_scan",
  "_phantomChildren": {},
  "_requested": {
    "raw": "graham_scan@github:mathisonian/graham_scan_js",
    "scope": null,
    "escapedName": "graham_scan",
    "name": "graham_scan",
    "rawSpec": "github:mathisonian/graham_scan_js",
    "spec": "github:mathisonian/graham_scan_js",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:mathisonian/graham_scan_js.git",
      "sshUrl": "git+ssh://git@github.com/mathisonian/graham_scan_js.git",
      "httpsUrl": "git+https://github.com/mathisonian/graham_scan_js.git",
      "gitUrl": "git://github.com/mathisonian/graham_scan_js.git",
      "shortcut": "github:mathisonian/graham_scan_js",
      "directUrl": "https://raw.githubusercontent.com/mathisonian/graham_scan_js/master/package.json"
    }
  },
  "_requiredBy": [
    "/leaflet.freedraw-browserify"
  ],
  "_resolved": "git://github.com/mathisonian/graham_scan_js.git#ea23ae62cd5ee686a91d4307712b10915b7db6b3",
  "_shasum": "db281eac57cde5fede668e26ee7fd543fdbff374",
  "_shrinkwrap": null,
  "_spec": "graham_scan@github:mathisonian/graham_scan_js",
  "_where": "C:\\git-repo\\myFirstElectronApp\\node_modules\\leaflet.freedraw-browserify",
  "authors": [
    "Brian Barnett <brian@3kb.co.uk>"
  ],
  "bugs": {
    "url": "https://github.com/brian3kb/graham_scan_js/issues"
  },
  "dependencies": {},
  "description": "Implementation of the Graham Scan algorithm to calculate a convex hull from a given array of x, y coordinates.",
  "devDependencies": {
    "bower": "~1.2.8",
    "grunt": "^0.4.5",
    "grunt-cli": "~0.1.12",
    "grunt-contrib-uglify": "^0.5.1"
  },
  "directories": {
    "test": "test",
    "lib": "src"
  },
  "gitHead": "ea23ae62cd5ee686a91d4307712b10915b7db6b3",
  "homepage": "http://brian3kb.github.io/graham_scan_js",
  "keywords": [
    "convex",
    "hull"
  ],
  "license": "MIT",
  "main": "src/graham_scan.js",
  "name": "graham_scan",
  "optionalDependencies": {},
  "readme": "## JavaScript Graham's Scan Convex Hull Algorithm\r\n\r\nI required a simple implementation to calculate a convex hull from a given array of x, y coordinates,\r\nthe convex hull's in js I found either were a little buggy, or required dependencies on other libraries.\r\nThis implementation just takes the x,y coordinates, no other libraries are needed.\r\n\r\nThese four examples show how to utilise with Google Maps:\r\n\r\n[Example 1](https://dl.dropboxusercontent.com/u/26246816/graham_scan/example/gmaps_example1.html)\r\n[Example 2](https://dl.dropboxusercontent.com/u/26246816/graham_scan/example/gmaps_example2.html)\r\n[Example 3](https://dl.dropboxusercontent.com/u/26246816/graham_scan/example/gmaps_example3.html)\r\n[Example 4](https://dl.dropboxusercontent.com/u/26246816/graham_scan/example/gmaps_example4.html)\r\n\r\nView [GitHub pages](http://brian3kb.github.io/graham_scan_js)\r\n\r\n### Building\r\n\r\nThis produces `graham_scan.min.js`:\r\n\r\n\tnpm install\r\n\tgrunt build\r\n\r\n### Testing\r\n\r\nThe source is tested with qUnit, tests executed with Google's JS Test Driver.\r\n\r\n### Usage\r\n\r\n    //Create a new instance.\r\n    var convexHull = new ConvexHullGrahamScan();\r\n\r\n    //add points (needs to be done for each point, a foreach loop on the input array can be used.)\r\n    convexHull.addPoint(x, y);\r\n\r\n    //getHull() returns the array of points that make up the convex hull.\r\n    var hullPoints = convexHull.getHull();\r\n    \r\n### Algorithm\r\n\r\n\tGRAHAM_SCAN(Q)\r\n\t    Find p0 in Q with minimum y-coordinate (and minimum x-coordinate if there are ties).\r\n\t    Sort the remaining points of Q (that is, Q − {p0}) by polar angle in counterclockwise order with respect to p0.\r\n\t    TOP [S] = 0                ▷ Lines 3-6 initialize the stack to contain, from bottom to top, first three points.\r\n\t    PUSH (p0, S)\r\n\t    PUSH (p1, S)\r\n\t    PUSH (p2, S)\r\n\t    for i = 3 to m             ▷ Perform test for each point p3, ..., pm.\r\n\t        do while the angle between NEXT_TO_TOP[S], TOP[S], and pi makes a non-left turn  ▷ remove if not a vertex\r\n\t            do POP(S)\r\n\t            PUSH (S, pi)\r\n\t    return S\r\n\r\n### References\r\n\r\n* http://www.personal.kent.edu/~rmuhamma/Compgeometry/MyCG/ConvexHull/GrahamScan/grahamScan.htm\r\n* http://en.wikipedia.org/wiki/Graham_scan\r\n\r\n### License\r\n\r\nMIT License\r\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/brian3kb/graham_scan_js.git"
  },
  "version": "1.0.2"
}
